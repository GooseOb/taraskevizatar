(()=>{const s={names:["html","css","js","static"],html:{v:"7",files:["index.html"]},js:{v:"18",files:["index.js"]},css:{v:"8",files:["styles/style.css","styles/dark.css"]},static:{v:"1",files:["fonts/NotoSansArabic-SemiBold.ttf","icons/close.svg","icons/copy.svg","icons/edit.svg","icons/info.svg","icons/settings.svg","icons/theme/light.svg","icons/theme/dark.svg"]},isActual(s){const[e,t=null]=s.split("-v");return t===this[e]?.v}};s.names.forEach((e=>{s[e].cacheName=e+"-v"+s[e].v}));const e=(...s)=>console.log("[SW]",...s);self.addEventListener("install",(()=>{e("install"),s.names.forEach((e=>{const{cacheName:t,files:c}=s[e];caches.open(t).then((s=>s.addAll(c)))}))})),self.addEventListener("activate",(async()=>{e("activate");const t=await caches.keys();await Promise.all(t.filter((e=>!s.isActual(e))).map((s=>caches.delete(s))))})),self.addEventListener("fetch",(s=>{s.respondWith((async s=>await caches.match(s)||await fetch(s))(s.request))}))})();